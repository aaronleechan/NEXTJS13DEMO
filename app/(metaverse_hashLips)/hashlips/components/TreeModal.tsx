/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    birch_tree_SC_free: THREE.Mesh;
  };
  materials: {
    birch_red_mat: THREE.MeshPhysicalMaterial;
  };
};

const TreeModal = (props: JSX.IntrinsicElements["group"]) => {
  const { nodes, materials } = useGLTF("/models/tree.glb") as GLTFResult;
  const [color,setColor] = useState("blue");
  return (
    <group {...props} dispose={null}>
      <mesh
        onClick={()=>setColor("green")}
        castShadow
        receiveShadow
        geometry={nodes.birch_tree_SC_free.geometry}
        material={materials.birch_red_mat}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.01}
        material-color={color}
      />
    </group>
  );
}

useGLTF.preload("/models/tree.glb");

export default TreeModal;